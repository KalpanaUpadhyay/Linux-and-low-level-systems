📌 Example: What You See with ls -l
Run this:

ls -l
You might see:

-rw-r--r--  1 user user  1234 May 18 10:00 file.txt
drwxr-xr-x  2 user user  4096 May 18 10:01 myfolder
lrwxrwxrwx  1 user user    10 May 18 10:02 link_to_file -> file.txt
crw-rw----  1 root audio 116, 33 May 18 10:03 /dev/audio
brw-rw----  1 root disk  8, 0 May 18 10:04 /dev/sda
Let’s break down the first character in the permission string.

🧠 The Meaning of the First Character in ls -l
Symbol	Type	Explanation
-	Regular file	A normal file like .txt, .c, .sh, etc.
d	Directory	A folder
l	Symbolic link	Like a shortcut (points to another file)
c	Character device	Hardware accessed byte-by-byte (e.g., keyboard, audio)
b	Block device	Hardware accessed in blocks (e.g., hard disk, USB)

🔹 Examples:
Command	Output	What it means
ls -l file.txt	-rw-r--r--	- → regular file
ls -l myfolder/	drwxr-xr-x	d → directory
ls -l /dev/null	crw-rw-rw-	c → character device
ls -l /dev/sda	brw-rw----	b → block device
ls -l link_to_file	lrwxrwxrwx	l → symbolic link

🏁 Quick Tip to Practice:
touch myfile.txt
mkdir mydir
ln -s myfile.txt mylink
ls -l
You’ll see:

-rw-r--r--   → myfile.txt
drwxr-xr-x   → mydir
lrwxrwxrwx   → mylink
